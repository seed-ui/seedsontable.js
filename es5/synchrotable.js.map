{"version":3,"sources":["synchrotable.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEa,Y,WAAA,Y;;;AACX,wBAAY,SAAZ,EAAuB,eAAvB,EAA2D;AAAA,QAAnB,YAAmB,yDAAJ,EAAI;AAAA;;AAAA,sHACnD,SADmD,EACxC,YADwC;;AAEzD,UAAK,OAAL,GAAe,gBAAgB,MAA/B;AAFyD;AAG1D;;;;2BAMM;AACL;AACA,WAAK,OAAL,GAAe,sBAAG,KAAK,MAAR,CAAf;AACA,WAAK,UAAL;AACD;;;iCAEY;AAAA;;AACX,0BAAY,aAAa,MAAzB,EAAiC,OAAjC,CAAyC,UAAC,KAAD;AAAA,eAAW,OAAK,MAAL,CAAY,EAAZ,CAAe,KAAf,EAAsB,aAAa,MAAb,CAAoB,KAApB,EAA2B,IAA3B,QAAtB,CAAX;AAAA,OAAzC;AACD;;;wBAZY;AAAE,aAAO,KAAK,OAAZ;AAAsB;;;wBAExB;AAAE,aAAO,KAAK,OAAZ;AAAsB;;;EARL,uBAAa,I;;AAqB/C,aAAa,MAAb,GAAsB;AACpB,UADoB,0BACH;AAAA,QAAP,IAAO,QAAP,IAAO;AAAE,GADC;AAEpB,OAFoB,wBAEN;AAAA,QAAP,IAAO,SAAP,IAAO;AAAE,GAFI;AAGpB,kBAHoB,mCAGiB;AAAA,QAAnB,GAAmB,SAAnB,GAAmB;AAAA,QAAd,IAAc,SAAd,IAAc;AAAA,QAAR,KAAQ,SAAR,KAAQ;AAAE,GAHnB;AAIpB,sBAJoB,uCAIuB;AAAA,QAArB,GAAqB,SAArB,GAAqB;AAAA,QAAhB,IAAgB,SAAhB,IAAgB;AAAA,QAAV,OAAU,SAAV,OAAU;AAAE,GAJzB;AAKpB,wBALoB,yCAKgB;AAAA,QAAZ,GAAY,SAAZ,GAAY;AAAA,QAAP,IAAO,SAAP,IAAO;AAAE;AALlB,CAAtB","file":"synchrotable.js","sourcesContent":["import Handsontable from 'handsontable';\nimport io from 'socket.io-client';\n\nexport class Synchrotable extends Handsontable.Core {\n  constructor(container, synchroSettings, userSettings = {}) {\n    super(container, userSettings);\n    this._server = synchroSettings.server;\n  }\n\n  get server() { return this._server; }\n\n  get socket() { return this._socket; }\n\n  init() {\n    super.init();\n    this._socket = io(this.server);\n    this._setEvents();\n  }\n\n  _setEvents() {\n    Object.keys(Synchrotable.events).forEach((event) => this.socket.on(event, Synchrotable.events[event].bind(this)));\n  }\n}\n\nSynchrotable.events = {\n  all_data({data}) {},\n  users({data}) {},\n  setDataAtRowProp({row, prop, value}) {},\n  saveCommentAtRowProp({row, prop, comment}) {},\n  removeCommentAtRowProp({row, prop}) {},\n};\n"]}